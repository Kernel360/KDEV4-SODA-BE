plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.soda'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// MySQL 커넥터
	runtimeOnly 'com.mysql:mysql-connector-j'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	// .env
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.auth0:java-jwt:4.4.0'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// smtp
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// AWS S3 v2
	implementation platform("software.amazon.awssdk:bom:2.25.16")
	implementation 'software.amazon.awssdk:s3'

	// MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// jackson(데이터로그 LocalDateTime 직렬화용)
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Mapper(데이터로그 저장시 엔티티에서 필드값 가져오면 양방향매핑이 있는 경우 순환참조 문제가 발생하므로 DTO에서 필드 접근하기 위함)
	implementation 'org.modelmapper:modelmapper:3.2.0'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}